//apply plugin: 'maven-publish'
//apply plugin: 'signing'
//
//group = GROUP
//archivesBaseName = ARTIFACT_NAME
//version = VERSION_NAME
//
//
//afterEvaluate {
//    publishing {
//        repositories {
//            maven {
//                //仓库默认不支持Https,所有这里设置成false.
//                allowInsecureProtocol = false
//                url = VERSION_NAME.endsWith('SNAPSHOT') ? SNAPSHOTS_REPO_URL : RELEASES_REPO_URL
//                credentials {
//                    username = ossrhUsername //maven仓库账号
//                    password = ossrhPassword //maven仓库账号
//                }
//            }
//        }
//        publications {
//            release(MavenPublication) {
//                //添加这个，否则aar文件不上传
//                //from components.release
//                artifact(tasks.getByName("bundleReleaseAar"))
//                //artifact(androidJavadocsJar)
//                artifact(androidSourcesJar)
//                groupId = GROUP_ID // 唯一标识（通常为模块包名，也可以任意）
//                artifactId = ARTIFACT_ID // 项目名称（通常为类库模块名称，也可以任意）
//                version = VERSION_NAME // 版本号
//                pom {
//                    name = ARTIFACT_ID
//                    description = 'Android图片加载库'
//                    // If your project has a dedicated site, use its URL here
//                    url = 'https://github.com/shiyd0516/baselib'
//                    licenses {
//                        license {
//                            //协议类型，一般默认Apache License2.0的话不用改：
//                            name = 'The Apache License, Version 2.0'
//                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                        }
//                    }
//                    developers {
//                        developer {
//                            id = 'shiyadonng'
//                            name = 'shiyadong'
//                            email = 'shiyd0516@163.com'
//                        }
//                    }
//                    // Version control info, if you're using GitHub, follow the format as seen here
//                    scm {
//                        //修改成你的Git地址：
//                        connection = 'scm:git@github.com:shiyd0516/baselib.git'
//                        developerConnection = 'scm:git@github.com:shiyd0516/baselib.git'
//                        //分支地址：
//                        url = 'https://github.com/shiyd0516/baselib/tree/master'
//                    }
//                    // A slightly hacky fix so that your POM will include any transitive dependencies
//                    // that your library builds upon
//                    withXml {
//                        def dependenciesNode = asNode().appendNode('dependencies')
//
//                        project.configurations.implementation.allDependencies.each {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                        }
//                    }
//                }
//            }
//        }
//    }
//uploadArchives {
//    repositories {
//        mavenDeployer {
////            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//            def ossrhUsername = getPropertyFromLocalProperties("ossrhUsername")
//            def ossrhPassword = getPropertyFromLocalProperties("ossrhPassword")
//
//            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(userName: ossrhUsername, password: ossrhPassword)
//            }
//
//            pom.project {
//                name POM_NAME
//                packaging POM_PACKAGING
//                description POM_DESCRIPTION
//                url POM_URL
//
//                scm {
//                    connection POM_SCM_CONNECTION
//                    developerConnection POM_SCM_DEVELOPER_CONNECTION
//                    url POM_SCM_URL
//                }
//
//                licenses {
//                    license {
//                        name POM_LICENSE_NAME
//                        url POM_LICENSE_URL
//                    }
//                }
//
//                developers {
//                    developer {
//                        id POM_DEVELOPER_ID
//                        name POM_DEVELOPER_NAME
//                        email POM_DEVELOPER_EMAIL
//                    }
//                }
//            }
//        }
//    }
//}
//
//def getPropertyFromLocalProperties(key) {
//    File file = project.rootProject.file('local.properties');
//    if (file.exists()) {
//        Properties properties = new Properties()
//        properties.load(file.newDataInputStream())
//        return properties.getProperty(key)
//    }
//}
//
//signing {
//    sign configurations.archives
//}